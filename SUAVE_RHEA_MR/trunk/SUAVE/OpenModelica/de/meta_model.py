import numpy as np

import neurolab as nl
        
bounds = [[0e+00, 1e+01]]


input = [[0.7359216746709757]]
#input = [[73592167.46709757],
# [96540525.78651841],
# [98292510.25725906],
# [85090555.9558036],
# [11299002.750056414],
# [99205886.5946572],
# [100000.0],
# [100000.0],
# [46140088.13116373],
# [46962456.81926167],
# [4034745.7187321433],
# [26835037.45610757],
# [41524711.17414148],
# [41938000.33794868],
# [100000.0],
# [2908276.8934852015],
# [100000.0],
# [30422603.695373233],
# [4620463.062192885],
# [41621606.445429645],
# [100000.0],
# [3716370.4497543084],
# [30422603.695373233],
# [24358082.95629859],
# [3716370.4497543084],
# [1472666.48720717],
# [823274.0899508613],
# [2414477.0878427583],
# [100000.0],
# [100000.0],
# [100000.0],
# [100000.0],
# [100000.0],
# [2414477.0878427583],
# [100000.0],
# [100000.0],
# [100000.0],
# [100000.0],
# [100000.0],
# [100000.0]]

target =[[0.1586186105356046]]
#target =[[158618.6105356046],
# [204515.32717444628],
# [208019.29611592757],
# [181615.38751301667],
# [34032.28110152229],
# [209846.04879072387],
# [14927.6305993635],
# [14927.6305993635],
# [103714.45186373692],
# [105359.1892399328],
# [21335.262311779206],
# [65104.35051362462],
# [94483.69794969243],
# [95310.27627730682],
# [14927.6305993635],
# [19474.156128276038],
# [14927.6305993635],
# [72279.48299215593],
# [22303.031536819857],
# [94677.48849226875],
# [14927.6305993635],
# [20809.251991834873],
# [72279.48299215593],
# [60150.44151400665],
# [20809.251991834873],
# [17139.74835449784],
# [16093.169675679364],
# [18659.291768292707],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [18659.291768292707],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635],
# [14927.6305993635]]

# Create net with 2 inputs and 1 neuron
net = nl.net.newff(bounds, [5,1])

# train with delta rule
# see net.trainf
error = net.train(input, target, epochs=500, show=1, goal=0.001)
out = net.sim(input)
# Plot results
import pylab as pl
pl.plot(error)
pl.xlabel('Epoch number')
pl.ylabel('Train error')
pl.grid()
pl.show()